openapi: 3.0.0
info:
  title: Dr. Klein Plattform API
  version: '1.0'
  description: |-
    # Nutzung der API
    Jede Firma innerhalb der Dr. Klein Plattform hat einen eindeutigen "companySlug", der immer im Pfad mit angegeben werden muss. Der Slug von Dr. Klein ist beispielsweise 'drklein', daher sieht der Pfad für Kooperationspartner von Dr. Klein so aus:

    https://api.drklein-plattform.de/drklein/v1/cooperations

    # Kooperation

    Eine Kooperation bezeichnet die Zusammenarbeit zwischen zwei Partnern. Ein Partner ist ein Mitarbeiter an einem Standort. Sie entstehen aus Kooperationsverträgen, die in der Plattform über die Weboberfläche angelegt und gepflegt werden können.
    Über diese Schnittstelle können u.a. die aktuellen Kooperationen eines Partners abgefragt werden.

    # Agenten

    Agenten sind Mitarbeiter einer Firma, die in einem Büro Kunden betreuen. Dies können sowohl Makler als auch Berater oder sogar Kundenbetreuer für andere Leistungen sein. Sie empfangen Leads und verwalten Ihre Kunden. Optional können sie dazu Vorgänge in der Plattform oder in externen Systemen wie z.B. Europace anlegen.
  contact:
    name: Timo Lange
    email: das-produkt@drklein.de
  termsOfService: Terms of Service
servers:
  - url: 'https://api.drklein-plattform.de/{companySlug}'
    description: PROD
  - url: 'https://api.staging.drklein-plattform.de/{companySlug}'
    description: STAGING
paths:
  '/v1/agents/{agentId}/partner-agents':
    parameters:
      - schema:
          type: string
        name: agentId
        in: path
        required: true
    get:
      summary: Find all partner agents
      tags:
        - Agenten
      responses: {}
      operationId: get-v1-agents-agentId-partner-agents
      description: Show all agents that are cooperating with this agent
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/agents.v1.yaml
  /v1/agents:
    get:
      summary: Find all agents
      responses: {}
      operationId: get-v1-agents
      description: Displays all agents
      requestBody:
        content:
          application/json:
            schema:
              $ref: ../models/agents.v1.yaml
      tags:
        - Agents
    post:
      summary: Create a new Agent
      operationId: post-v1-agents
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/agent.v1.yaml
      description: An agent can be created with an existing employee and an existing office
      requestBody:
        content:
          application/json:
            schema:
              $ref: ''
            examples:
              example-1: {}
  /v1/cooperations:
    get:
      summary: Find all
      tags:
        - Cooperations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/cooperations.v1.yaml
      operationId: get-cooperations
      description: Zeige alle Kooperationen der Firma oder filtere sie nach einem Partner.
      parameters:
        - schema:
            type: string
          in: query
          name: contractingPartnerId
        - schema:
            type: string
          in: query
          name: contractingPartnerExternalKey
    parameters: []
  /v1/company-registrations:
    get:
      summary: Company Registrations
      tags: []
      responses: {}
      operationId: get-company-registrations
      description: Get the status of a registration
    parameters: []
    post:
      summary: Company Registration
      operationId: post-v1-company-registrations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      description: 'A company is created asynchronous. The creations is triggered by creating a company-registration which needs to be polled until the company was created. When the registration finishes, it will also contain service credentials that are deleted 10min after creation'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: ''
              properties:
                name:
                  type: string
                  description: The name of the company to be created. It needs to be unique
                slug:
                  type: string
                  description: the slug that will identify this company in the first path parameter
                  maxLength: 255
              required:
                - name
  /v1/employees:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-v1-employees
  /v1/offices:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-v1-offices
  '/v1/agents/{agentId}':
    parameters:
      - schema:
          type: string
        name: agentId
        in: path
        required: true
    get:
      summary: Get an agent
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ../models/agent.v1.yaml
      operationId: get-v1-agents-agentId
      description: Returns one agent
  /v1/company-cooperation-contracts:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-v1-company-cooperation-contracts
components:
  schemas: {}
  securitySchemes:
    Dr.Klein Plattform ID Service:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: ''
          refreshUrl: ''
          scopes: {}
      description: Alle Aufrufe der Public Api benötigen einen gültigen OAuth Token vom ID Service der Dr.Klein Plattform.
